# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g. crates.io) dependencies
#
# If you believe there's an error in this file please file an
# issue against the rust-lang/cargo repository. If you're
# editing this file be aware that the upstream Cargo.toml
# will likely look very different (and much more reasonable)

[package]
name = "backtrace"
version = "0.3.4"
authors = ["Alex Crichton <alex@alexcrichton.com>", "The Rust Project Developers"]
description = "A library to acquire a stack trace (backtrace) at runtime in a Rust program.\n"
homepage = "https://github.com/alexcrichton/backtrace-rs"
documentation = "http://alexcrichton.com/backtrace-rs"
readme = "README.md"
license = "MIT/Apache-2.0"
repository = "https://github.com/alexcrichton/backtrace-rs"
[dependencies.findshlibs]
version = "0.3.3"
optional = true

[dependencies.rustc-demangle]
version = "0.1.4"

[dependencies.serde]
version = "1.0"
optional = true

[dependencies.addr2line]
version = "0.5.0"
optional = true

[dependencies.rustc-serialize]
version = "0.3"
optional = true

[dependencies.cpp_demangle]
version = "0.2.3"
optional = true
default-features = false

[dependencies.serde_derive]
version = "1.0"
optional = true

[dependencies.cfg-if]
version = "0.1"

[features]
unix-backtrace = []
kernel32 = []
dbghelp = ["kernel32-sys", "winapi", "dbghelp-sys"]
dladdr = []
gimli-symbolize = ["addr2line", "findshlibs"]
libunwind = []
default = ["libunwind", "libbacktrace", "coresymbolication", "dladdr", "dbghelp"]
serialize-rustc = ["rustc-serialize"]
serialize-serde = ["serde", "serde_derive"]
coresymbolication = []
libbacktrace = ["backtrace-sys"]
[target."cfg(windows)".dependencies.kernel32-sys]
version = "0.2"
optional = true

[target."cfg(windows)".dependencies.winapi]
version = "0.2.5"
optional = true

[target."cfg(windows)".dependencies.dbghelp-sys]
version = "0.2"
optional = true
[target."cfg(unix)".dependencies.libc]
version = "0.2"
[target."cfg(all(unix, not(target_os = \"fuchsia\"), not(target_os = \"emscripten\"), not(target_os = \"macos\"), not(target_os = \"ios\")))".dependencies.backtrace-sys]
version = "0.1.3"
optional = true
